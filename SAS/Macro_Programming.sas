/***********************************************************************************/
/*Program Name: Macro_Programming.sas*/
/*Author: Casey Poulson*/
/*Purpose: Extensive Macro programming and techniques*/


/*Clearing titles, footnotes, and proc titles on ODS, setting options*/

TITLE;
FOOTNOTE;
ODS NOPROCTITLE;
OPTIONS NODATE;

/*Libname statements to assign librefs to libraries, protecting hwdata*/

LIBNAME HWDATA '~PATH\HWDATA' access=readonly;
LIBNAME MYLIB '~PATH\MYLIB';

/*(3) Setting options to see resolved macro-variable values in the log, as well*/ 
/*as text generated by execution, setting permanent format library location,*/
/*Ensure autocall facility is active, and identifying autocall locations*/

OPTIONS SYMBOLGEN MPRINT FMTSEARCH=(mylib.Myfmts); 
OPTIONS MAUTOSOURCE SASAUTOS=('~PATH\macros',sasautos);

/*(4) Creating output fileref for pdf output, and opening the file destination*/

FILENAME output '~PATH\Macro_Programming_output.pdf';
ODS PDF FILE= output;

/*(5) Creating a permanent custom format term in mylib.myfmts*/
/*Terms are formatted according to the corresponding year and season*/

PROC FORMAT LIBRARY=mylib.myfmts;
	VALUE term
		  201710 = 'Spring 2017'
		  201720 = 'Summer 2017'
		  201730 = 'Fall 2017'
		  201810 = 'Spring 2018'
		  201820 = 'Summer 2018'
		  201830 = 'Fall 2018'
		  201910 = 'Spring 2019'
		  201920 = 'Summer 2019'
		  201930 = 'Fall 2019'
		  202010 = 'Spring 2020'
		  202020 = 'Summer 2020'
		  202030 = 'Fall 2020'
		  202110 = 'Spring 2021';
run;

/*(6) Confirming system options set up appropriately*/

%put %datatyp('3.1416');

/*(7) Calling the CPoulson_macro macro with libref and filter parameters*/
/*set to hwdata.course1 and 3 respectively*/

%CPoulson_macro(libref=hwdata.course1,filter=3)

/*(8) Reporting macros in work library*/

PROC CATALOG cat=work.sasmacr;
	CONTENTS;
	title "Macros stored in Work Library";
QUIT;

/*(9) Note: mylib.grades is the dataset created in assignment 6*/
/*(a) Creating work.grades by sorting mylib.grades by pkey column*/

PROC SORT DATA=mylib.grades OUT=work.grades;
	BY PKEY;
run;

/*(b) Using grades as the source with no output dataset _null_*/
/*BY pkey to use the first. naming conventions within the PDV*/
/*Only outputting the first occurrence of PKEY column*/
/*For the first iteration, populate the max_interval and max_int_pkey macro*/
/*variables with Interval and PKEY respectively.*/
/*For succeeding iterations, if the current value of Interval is greater*/
/*than the current value of max_interval, update the macro-variable values*/
/*accordingly. Retaining macro-variable values.*/

DATA _null_;
	SET grades;
	BY PKEY;
	IF first.PKEY;
	IF _N_ = 1 THEN DO;
		CALL SYMPUTX('max_interval', Interval);
		CALL SYMPUTX('max_int_pkey', PKEY);
		END; 
	ELSE IF _N_ > 1 THEN DO;
		IF Interval > inputn(symget('max_interval'),3.) THEN DO;
			CALL SYMPUTX('max_interval', Interval);
			CALL SYMPUTX('max_int_pkey', PKEY);
		END;
	END; 
	RETAIN symget('max_interval') symget('max_int_pkey');
	CALL SYMPUTX('dfw_term'||left(PKEY),DFW_Term);
run;

/*(c) See symputx call just above the run; statement*/
/*This creates a series of macro variables named dfw_term followed by that*/
/*particular student's PKEY number. The values that these macro-variables*/
/*get are the corresponding DFW_Term values from work.grades.*/


/*(10) Writing all user-defined macro variables to the log*/

%put _user_;

/*(11) Printing the dataset work.grades with term columns formatted*/
/*title2 contains macro-variable reference &max_interval*/
/*title3: &&dfw_term&max_int_pkey resolves to &dfw_term1327119105, which resolves*/
/*to 201720. We format this with term. format with putn() function.*/
/*We wrap all of that in %sysfunc() in order to use the SAS function putn().*/

title1 "Students who Repeated Course1";
title2 "The Student with the Longest Interval of &max_interval";
title3 "Began in %sysfunc(putn(&&dfw_term&max_int_pkey,term.))";
PROC PRINT DATA=grades;
FORMAT DFW_Term term. Pass_Term term.;
run;

/*(12) Displaying contents of mylib library, suppressing the descriptor portion*/

title "Mylib Library Contents";
PROC CONTENTS DATA=mylib._ALL_ nods;
run;

/*Closing the PDF ODS output file*/

ODS PDF CLOSE;
